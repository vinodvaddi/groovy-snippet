import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.link.IssueLink
import com.atlassian.jira.issue.link.IssueLinkManager
import com.atlassian.jira.issue.Issue

List<Issue> resolveIssues = new ArrayList<>()

IssueLinkManager issueLinkManager = ComponentAccessor.getIssueLinkManager()
List<IssueLink> issueLinks = issueLinkManager.getInwardLinks(issue.id)

for(IssueLink issueLink: issueLinks) {
	Issue linkedIssue = issueLink.sourceObject
//    log.info("inward - ${linkedIssue.key}")
	if(resolveIssues.contains(linkedIssue))
		continue
	if(!"Incident".equals(linkedIssue.issueType.name)){
		continue
	}
	resolveIssues.add(linkedIssue)
}

issueLinks = issueLinkManager.getOutwardLinks(issue.id)
for(IssueLink issueLink: issueLinks) {
	Issue linkedIssue = issueLink.destinationObject
//    log.info("outward - ${linkedIssue.key}")
	if(resolveIssues.contains(linkedIssue))
		continue
	if(!"Incident".equals(linkedIssue.issueType.name)){
		continue
	}
	resolveIssues.add(linkedIssue)
}
//log.info(resolveIssues.toString())


return resolveIssues.size()
