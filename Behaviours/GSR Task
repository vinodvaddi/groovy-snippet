// Initiliser

import com.onresolve.jira.groovy.user.FormField
import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.issue.customfields.option.Option
import com.atlassian.crowd.embedded.api.Group


FormField parentFF = getFieldById("parentIssueId")
FormField summaryFF = getFieldById("summary")
FormField descriptionFF = getFieldById("description")
FormField dateFF = getFieldByName("Date Need By")
FormField FacilitiesRequesttypeff = getFieldByName("Facility Request Type")
FormField SoftwareRequesttypeff = getFieldByName("Software Item")
FormField HardwareRequesttypeff = getFieldByName("Hardware Item")
FormField Justificationff = getFieldByName("Justification")
FormField SecurityRequesttypeff = getFieldByName("Security Request Type")
FormField SecurityCategorytypeff = getFieldByName("Security Services Category")
String rbuF = "Requestor's Business Unit"
String rsbuF = "Requestor's Sub-Business Unit"
String gsrissuetype = "GSR Issue Type"
String gsrcategory = "GSR Category"
String gsrsubcategory = "GSR Sub Category"

//FormField requestorFF = getFieldByName("BU")
FormField assignmentGroupFF = getFieldByName("Assignment Group")
FormField assigneeFF = getFieldById("assignee")
FormField RequesterFF = getFieldByName("Requester")
FormField requestorBUFF = getFieldByName(rbuF)
FormField requestorSBUFF = getFieldByName(rsbuF)
FormField gissuetype = getFieldByName(gsrissuetype)
FormField gcategory = getFieldByName(gsrcategory)
FormField gsubcategory = getFieldByName(gsrsubcategory)
if(parentFF == null || parentFF.getFormValue() == null) {
	return
}
Long parentIssueId = parentFF.getFormValue() as Long

if (parentIssueId == null) {
	return
}
def requestorBUCf = customFieldManager.getCustomFieldObjectsByName(rbuF)[0]
def requestorSBUCf = customFieldManager.getCustomFieldObjectsByName(rsbuF)[0]
def gcissuetype = customFieldManager.getCustomFieldObjectsByName(gsrissuetype)[0]
def gccategory = customFieldManager.getCustomFieldObjectsByName(gsrcategory)[0]
def gcsubcategory = customFieldManager.getCustomFieldObjectsByName(gsrsubcategory)[0]
def issueManager = ComponentAccessor.getIssueManager()
def parentIssue = issueManager.getIssueObject(parentIssueId)
def customFieldManager = ComponentAccessor.getCustomFieldManager()
def requesterCf = customFieldManager.getCustomFieldObjectByName("Requester")
def JustificationCf = customFieldManager.getCustomFieldObjectByName("Justification")
def datecf = customFieldManager.getCustomFieldObjectByName("Date Need By")
def FacilitiesRequesttypeCf = customFieldManager.getCustomFieldObjectByName("Facility Request Type")
//Map<String, Option> fcf = FacilitiesRequesttypeCf.getValue(parentIssue) as Map<String, Option>
def SoftwareRequesttypeCf = customFieldManager.getCustomFieldObjectByName("Software Item")
def hardwareRequesttypecf= customFieldManager.getCustomFieldObjectByName("Hardware Item")
def securityRequesttypecf = customFieldManager.getCustomFieldObjectByName("Security Request Type")
def securitycategorytypecf = customFieldManager.getCustomFieldObjectByName("Security Services Category")

List requestorBUs = requestorBUCf.getValue(parentIssue) as List
if(requestorBUs != null && !requestorBUs.isEmpty()) {
    def requestorBU = requestorBUs[0]
    requestorBUFF?.setFormValue(requestorBU.objectKey)
}

List requestorSBUs = requestorSBUCf.getValue(parentIssue) as List
if(requestorSBUs != null && !requestorSBUs.isEmpty()) {
    def requestorSBU = requestorSBUs[0]
    requestorSBUFF?.setFormValue(requestorSBU.objectKey)
}
List requestorissuetype = gcissuetype.getValue(parentIssue) as List
if(requestorissuetype != null && !requestorissuetype.isEmpty()) {
    def requestorIT = requestorissuetype[0]
    gissuetype?.setFormValue(requestorIT.objectKey)
}
List requestorcategory = gccategory.getValue(parentIssue) as List
if(requestorcategory != null && !requestorcategory.isEmpty()) {
    def requestorCT = requestorcategory[0]
    gcategory?.setFormValue(requestorCT.objectKey)
}
List requestorsubcategory = gcsubcategory.getValue(parentIssue) as List
if(requestorissuetype != null && !requestorissuetype.isEmpty()) {
    def requestorSCT = requestorissuetype[0]
    gsubcategory?.setFormValue(requestorSCT.objectKey)
}
if(RequesterFF != null) {
	RequesterFF.setFormValue(requesterCf.getValue(parentIssue)?.name)
}
if(JustificationCf.getValue(parentIssue) != null && JustificationCf.getValue(parentIssue) != "") {
	Justificationff.setFormValue(JustificationCf.getValue(parentIssue))
}

if(datecf.getValue(parentIssue) != null && datecf.getValue(parentIssue) != "") {
	dateFF.setFormValue(datecf.getValue(parentIssue).format("dd/MMM/yy"))
}
if(FacilitiesRequesttypeCf.getValue(parentIssue) != null && FacilitiesRequesttypeCf.getValue(parentIssue) != "") {
	FacilitiesRequesttypeff.setFormValue(FacilitiesRequesttypeCf.getValue(parentIssue).optionId)
}

if(SoftwareRequesttypeCf.getValue(parentIssue) != null && SoftwareRequesttypeCf.getValue(parentIssue) != "") {
	SoftwareRequesttypeff.setFormValue(SoftwareRequesttypeCf.getValue(parentIssue).optionId)
}
if(hardwareRequesttypecf.getValue(parentIssue) != null && hardwareRequesttypecf.getValue(parentIssue) != "") {
	HardwareRequesttypeff.setFormValue(hardwareRequesttypecf.getValue(parentIssue).optionId)
}
if(securityRequesttypecf.getValue(parentIssue) != null && securityRequesttypecf.getValue(parentIssue) != "" && securityRequesttypecf.getValue(parentIssue) != "--Please Select Request Type--") {
	SecurityRequesttypeff.setFormValue(securityRequesttypecf.getValue(parentIssue).optionId)
}
if(securitycategorytypecf.getValue(parentIssue) != null && securitycategorytypecf.getValue(parentIssue) != "" && securitycategorytypecf.getValue(parentIssue) != "--Please Select Category--") {
	SecurityCategorytypeff.setFormValue(securitycategorytypecf.getValue(parentIssue).optionId)
}

if(assigneeFF == null) {
	assigneeFF.setFormValue(parentIssue.assignee?.username)
}

if(summaryFF != null) {
	summaryFF.setFormValue(parentIssue.summary)
}
if(descriptionFF != null) {
	descriptionFF.setFormValue(parentIssue.description)
}

FormField priorityFF = getFieldById("priority")
if(priorityFF != null && parentIssue.priority != null) {
	priorityFF.setFormValue(parentIssue.priority.getId())
}



//
